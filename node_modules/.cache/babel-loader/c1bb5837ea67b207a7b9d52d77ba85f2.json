{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KYS96\\\\spheat_4\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as locationsData from \"./data/locations.json\";\n\nfunction Map() {\n  const [selectedLoc, setSelectedLoc] = useState(null);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(GoogleMap, {\n    defaultZoom: 14,\n    defaultCenter: {\n      lat: 59.93848,\n      lng: 30.312481\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, locationsData.map(loc => React.createElement(Marker, {\n    key: loc.id,\n    position: {\n      lat: loc.gps[0],\n      lng: loc.gps[1]\n    },\n    onClick: () => {\n      setSelectedLoc(loc);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), selectedLoc && React.createElement(InfoWindow, {\n    position: {\n      lat: selectedLoc.gps[0],\n      lng: selectedLoc.gps[1]\n    },\n    onCloseClick: () => {\n      setSelectedLoc(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, selectedLoc.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, selectedLoc.properties.DESCRIPTION), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, selectedLoc.properties.ADRESS)))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCPlfNpozZisS3dxh7AFQz8pWx9ttHmdgQ`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/KYS96/spheat_4/src/App.js"],"names":["React","useState","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","locationsData","Map","selectedLoc","setSelectedLoc","lat","lng","map","loc","id","gps","properties","NAME","DESCRIPTION","ADRESS","WrappedMap","App","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAOA,OAAO,KAAKC,aAAZ,MAA+B,uBAA/B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAE;AAAEU,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,GAAG,EAAE;AAAtB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,aAAa,CAACM,GAAd,CAAmBC,GAAD,IACjB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,EADX;AAEE,IAAA,QAAQ,EAAE;AACRJ,MAAAA,GAAG,EAAEG,GAAG,CAACE,GAAJ,CAAQ,CAAR,CADG;AAERJ,MAAAA,GAAG,EAAEE,GAAG,CAACE,GAAJ,CAAQ,CAAR;AAFG,KAFZ;AAME,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,cAAc,CAACI,GAAD,CAAd;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJH,EAiBGL,WAAW,IACV,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE;AACRE,MAAAA,GAAG,EAAEF,WAAW,CAACO,GAAZ,CAAgB,CAAhB,CADG;AAERJ,MAAAA,GAAG,EAAEH,WAAW,CAACO,GAAZ,CAAgB,CAAhB;AAFG,KADZ;AAKE,IAAA,YAAY,EAAE,MAAM;AAClBN,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAACQ,UAAZ,CAAuBC,IAA5B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,WAAW,CAACQ,UAAZ,CAAuBE,WAA3B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,WAAW,CAACQ,UAAZ,CAAuBG,MAA3B,CAHF,CATF,CAlBJ,CADF,CADF;AAuCD;;AAED,MAAMC,UAAU,GAAGlB,YAAY,CAACD,aAAa,CAACM,GAAD,CAAd,CAA/B;AAEA,eAAe,SAASc,GAAT,GAAe;AAC5B,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAG,+HADjB;AAEE,IAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB;AAGE,IAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB;AAIE,IAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"react-google-maps\";\r\nimport * as locationsData from \"./data/locations.json\";\r\n\r\nfunction Map() {\r\n  const [selectedLoc, setSelectedLoc] = useState(null);\r\n  return (\r\n    <div className=\"App\">\r\n      <GoogleMap\r\n        defaultZoom={14}\r\n        defaultCenter={{ lat: 59.93848, lng: 30.312481 }}\r\n      >\r\n        {locationsData.map((loc) => (\r\n          <Marker\r\n            key={loc.id}\r\n            position={{\r\n              lat: loc.gps[0],\r\n              lng: loc.gps[1],\r\n            }}\r\n            onClick={() => {\r\n              setSelectedLoc(loc);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selectedLoc && (\r\n          <InfoWindow\r\n            position={{\r\n              lat: selectedLoc.gps[0],\r\n              lng: selectedLoc.gps[1],\r\n            }}\r\n            onCloseClick={() => {\r\n              setSelectedLoc(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{selectedLoc.properties.NAME}</h2>\r\n              <p>{selectedLoc.properties.DESCRIPTION}</p>\r\n              <p>{selectedLoc.properties.ADRESS}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\r\n      <WrappedMap\r\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCPlfNpozZisS3dxh7AFQz8pWx9ttHmdgQ`}\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `100%` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
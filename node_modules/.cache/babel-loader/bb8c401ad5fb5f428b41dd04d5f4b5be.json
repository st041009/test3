{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KYS96\\\\spheat_2\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as locationsData from \"./data/locations.json\";\n\nfunction Map() {\n  const [selectedLoc, setSelectedLoc] = useState(null);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 59.93848,\n      lng: 30.312481\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, locationsData.features.map(loc => React.createElement(Marker, {\n    key: loc.properties.LOC_ID,\n    position: {\n      lat: loc.geometry.coordinates[0],\n      lng: loc.geometry.coordinates[1]\n    },\n    onClick: () => {\n      setSelectedLoc(loc);\n    }\n    /*\n    icon={{\n      url:\"/spheat_round.png\",\n      scaledSize: new window.google.maps.Size(25,25)\n    }} \n    */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), selectedLoc && React.createElement(InfoWindow, {\n    position: {\n      lat: selectedLoc.geometry.coordinates[0],\n      lng: selectedLoc.geometry.coordinates[1]\n    },\n    onCloseClick: () => {\n      setSelectedLoc(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, selectedLoc.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, selectedLoc.properties.DESCRIPTION), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, selectedLoc.properties.ADRESS))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCjbW172IDnWkymsN6374qVP1dSjn3azIE`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: `90%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/KYS96/spheat_2/src/App.js"],"names":["React","useState","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","locationsData","Map","selectedLoc","setSelectedLoc","lat","lng","features","map","loc","properties","LOC_ID","geometry","coordinates","NAME","DESCRIPTION","ADRESS","WrappedMap","App","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAOA,OAAO,KAAKC,aAAZ,MAA+B,uBAA/B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAE;AAAEU,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,GAAG,EAAE;AAAtB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,aAAa,CAACM,QAAd,CAAuBC,GAAvB,CAA2BC,GAAG,IAC7B,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,GAAG,CAACC,UAAJ,CAAeC,MADtB;AAEE,IAAA,QAAQ,EAAE;AACRN,MAAAA,GAAG,EAAEI,GAAG,CAACG,QAAJ,CAAaC,WAAb,CAAyB,CAAzB,CADG;AAERP,MAAAA,GAAG,EAAEG,GAAG,CAACG,QAAJ,CAAaC,WAAb,CAAyB,CAAzB;AAFG,KAFZ;AAME,IAAA,OAAO,EAAE,MAAM;AACbT,MAAAA,cAAc,CAACK,GAAD,CAAd;AACD;AACD;;;;;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJH,EAuBGN,WAAW,IACV,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE;AACRE,MAAAA,GAAG,EAAEF,WAAW,CAACS,QAAZ,CAAqBC,WAArB,CAAiC,CAAjC,CADG;AAERP,MAAAA,GAAG,EAAEH,WAAW,CAACS,QAAZ,CAAqBC,WAArB,CAAiC,CAAjC;AAFG,KADZ;AAKE,IAAA,YAAY,EAAE,MAAM;AAClBT,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAACO,UAAZ,CAAuBI,IAA5B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,WAAW,CAACO,UAAZ,CAAuBK,WAA3B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,WAAW,CAACO,UAAZ,CAAuBM,MAA3B,CAHF,CATF,CAxBJ,CADF;AA2CD;;AAED,MAAMC,UAAU,GAAGpB,YAAY,CAACD,aAAa,CAACM,GAAD,CAAd,CAA/B;AAEA,eAAe,SAASgB,GAAT,GAAe;AAC5B,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAG,+HADjB;AAEE,IAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB;AAGE,IAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB;AAIE,IAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport * as locationsData from \"./data/locations.json\";\n\nfunction Map() {\n  const [selectedLoc, setSelectedLoc] = useState(null);\n  return (\n    <GoogleMap\n      defaultZoom={10}\n      defaultCenter={{ lat: 59.93848, lng: 30.312481 }}\n    >\n      {locationsData.features.map(loc => (\n        <Marker\n          key={loc.properties.LOC_ID}\n          position={{\n            lat: loc.geometry.coordinates[0],\n            lng: loc.geometry.coordinates[1]\n          }}\n          onClick={() => {\n            setSelectedLoc(loc);\n          }}\n          /*\n          icon={{\n            url:\"/spheat_round.png\",\n            scaledSize: new window.google.maps.Size(25,25)\n          }} \n          */\n        />\n      ))}\n\n      {selectedLoc && (\n        <InfoWindow\n          position={{\n            lat: selectedLoc.geometry.coordinates[0],\n            lng: selectedLoc.geometry.coordinates[1]\n          }}\n          onCloseClick={() => {\n            setSelectedLoc(null);\n          }}\n        >\n          <div>\n            <h2>{selectedLoc.properties.NAME}</h2>\n            <p>{selectedLoc.properties.DESCRIPTION}</p>\n            <p>{selectedLoc.properties.ADRESS}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default function App() {\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <WrappedMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCjbW172IDnWkymsN6374qVP1dSjn3azIE`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `90%` }} />}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}